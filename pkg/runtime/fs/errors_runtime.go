// this file is auto-generated by github.com/grexie/isolates, DO NOT EDIT

package fs

import (
  isolates "github.com/grexie/isolates"
)

var _ = isolates.RegisterRuntime("fs", "/Users/tim/src/grexie/solid/pkg/runtime/fs/errors.go", func (in isolates.FunctionArgs) (*isolates.Value, error) {
  if constructor, err := in.Context.CreateWithName(in.ExecutionContext, "FSError", func (in isolates.FunctionArgs) (*FSErrorBase, error) {
    return NewFSError2(in)
  }); err != nil {
    return nil, err
  } else if err := in.Args[1].Set(in.ExecutionContext, "FSError", constructor); err != nil {
    return nil, err
  }

  return nil, nil
})

func (e *FSErrorBase) V8GetCode(in isolates.GetterArgs) (*isolates.Value, error) {
  result := e.Code()
  return in.Context.Create(in.ExecutionContext, result)
}

func (e *FSErrorBase) V8GetMessage(in isolates.GetterArgs) (*isolates.Value, error) {
  result := e.Message()
  return in.Context.Create(in.ExecutionContext, result)
}