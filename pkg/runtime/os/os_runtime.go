// this file is auto-generated by github.com/grexie/isolates, DO NOT EDIT

package os

import (
  isolates "github.com/grexie/isolates"
)

var _ = isolates.RegisterRuntime("os", "/Users/tim/src/grexie/solid/pkg/runtime/os/os.go", func (in isolates.FunctionArgs) (*isolates.Value, error) {
  {
    fnName := "platform"
    if fn, err := in.Context.CreateFunction(in.ExecutionContext, &fnName, func (in isolates.FunctionArgs) (*isolates.Value, error) {
      result := Platform()
      return in.Context.Create(in.ExecutionContext, result)
    }); err != nil {
      return nil, err
    } else if err := in.Args[1].Set(in.ExecutionContext, "platform", fn); err != nil {
      return nil, err
    }
  }

  {
    fnName := "type"
    if fn, err := in.Context.CreateFunction(in.ExecutionContext, &fnName, func (in isolates.FunctionArgs) (*isolates.Value, error) {
      if result, err := Type(); err != nil {
        return nil, err
      } else {
        return in.Context.Create(in.ExecutionContext, result)
      }
    }); err != nil {
      return nil, err
    } else if err := in.Args[1].Set(in.ExecutionContext, "type", fn); err != nil {
      return nil, err
    }
  }

  return nil, nil
})

