// this file is auto-generated by github.com/grexie/isolates, DO NOT EDIT

package stream

import (
  isolates "github.com/grexie/isolates"
  reflect "reflect"
)

var _ = isolates.RegisterRuntime("stream", "duplex.go", func (in isolates.FunctionArgs) (*isolates.Value, error) {
  if constructor, err := in.Context.CreateWithName(in.ExecutionContext, "Duplex", func (in isolates.FunctionArgs) (*DuplexBase, error) {
    return NewDuplex(in)
  }); err != nil {
    return nil, err
  } else if err := in.Args[1].Set(in.ExecutionContext, "Duplex", constructor); err != nil {
    return nil, err
  }

  return nil, nil
})

func (c *ReadWriteCloser) V8FuncFinal(in isolates.FunctionArgs) (*isolates.Value, error) {
  var this Writable
  if v, __err := in.Arg(in.ExecutionContext, 0).Unmarshal(in.ExecutionContext, reflect.TypeOf(&this).Elem()); __err != nil {
    return nil, __err
  } else {
    this = v.Interface().(Writable)
  }

  callback := in.Arg(in.ExecutionContext, 1)
  if err := c.Final(in, this, callback); err != nil {
    return nil, err
  } else {
    return nil, nil
  }
}